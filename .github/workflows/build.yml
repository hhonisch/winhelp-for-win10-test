name: Build and Test

on: [push, workflow_dispatch]

jobs:
  
  # Build artifacts
  build:
    runs-on: windows-latest

    steps:
      # Output run ID - in case we need it to release the artifacts. 
      # For information, also dump entire GitHub context.
      - name: "Current run ID ${{github.run_id}}: Dump Context"
        env:
          GITHUB_CONTEXT: ${{toJson(github)}}
        run: |
          echo "Run ID: ${{github.run_id}}"
          echo ${env:GITHUB_CONTEXT}

      # Checkout source tree
      - name: Checkout
        uses: actions/checkout@v2

      # We need msbuild
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      # Build artifacts
      - name: Build
        run: msbuild .\build\build.proj /t:GithubBuild /p:BuildNo=${{github.run_number}}

      # Upload arifacts to make them available for next job
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Dist
          path: |
            ./dist/*
            !./dist/.keep

  # Run integration tests with artifacts from build job
  test:
    needs: build
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [windows-2016, windows-2019]
    steps:
      # Checkout source tree
      - name: Checkout
        uses: actions/checkout@v2

      # We need msbuild
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      # Download artifacts from build job
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: Dist
          path: ./dist

      # Use chocolatey to install AutoIt, add AutoIt install dir to PATH variable
      - name: Install AutoIt
        env:
          AUTOIT_INSTALL_DIR: 'D:\Autoit3'
        run: |
          choco install autoit --no-progress --yes --install-args="/D=${env:AUTOIT_INSTALL_DIR}"
          echo "${env:AUTOIT_INSTALL_DIR}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # Run integration tests
      - name: "Run integration tests"
        timeout-minutes: 5
        run: msbuild .\build\integration_test.proj

      # Upload the integration test logs for possible inspections
      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: TestLogs
          path: |
            ./test/log/*
            !./test/log/.keep

